version: '3.1'

services:
  nginx:
    container_name: nginx
    build: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./www:/var/www      
    links:
      - php
      - nodejs      

  nodejs:
    container_name: nodejs
    build: ./nodejs
    ports:
      - "4300:4300"
      - "9229:9229"
    restart: always
    volumes:
      - ./nodejs/src:/home/nodejs/src
    
  php:
    container_name: php-c
    build:
      context: ./php
    volumes:
      - ./www:/var/www
    links:
      - mysql

  maildev:
    container_name: mail-c
    image: djfarrelly/maildev
    container_name: maildev
    ports:
      - 1080:80

  mysql:
    container_name: mysql
    build:
      context: ./mysql
    ports:
      - "3336:3306"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_DATABASE: demo
      MYSQL_USER: demo
      MYSQL_PASSWORD: demo
    volumes:
      - mysql_data:/var/lib/mysql
      - ./logs:/var/log/mysql
      - ./mysql/conf.d:/etc/mysql/conf.d

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080
    links:
      - mysql

  mongodb:
    container_name: mongodb
    image: bitnami/mongodb:latest
    ports:
      - 27017:27017
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      #- MONGODB_EXTRA_FLAGS=--wiredTigerCacheSizeGB=2
    volumes:
      - mongodb_data:/bitnami

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_OPTIONS_EDITORTHEME=ambiance
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      #- ME_CONFIG_MONGODB_ENABLE_ADMIN=false
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin      
    links:
      - mongodb

  redis:
    container_name: redis
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 6379:6379
    volumes:
      - redis_data:/bitnami/redis/data

  redis-commander:
    container_name: redis-commander
    #hostname: redis-commander
    image: rediscommander/redis-commander:latest
    #build: .
    restart: always
    environment:
      - REDIS_HOSTS=localhost:redis:6379
    ports:
      - 8082:8081
    links:
      - redis

  nest-js-app:
    container_name: nest-js-app
    build: ./nest-js-app
    ports:
      - 4400:3000
      - 9230:9229
    tty: true
    restart: always
    volumes:
      - ./nest-js-app:/nest

volumes:
  mysql_data:
  mongodb_data:
  redis_data:


